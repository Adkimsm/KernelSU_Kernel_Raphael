name: Kernel CI
on:
  repository_dispatch:
  workflow_dispatch:
  push:
    branches:
    - "main"

jobs:
  Patch_KernelSU:
    runs-on: ubuntu-latest
    env:
      KernelSU_Dir: /home/runner/work/KernelSU
      Setup_Dir: /home/runner/work/Setup_Dir
    steps:
      - name: Download KernelSU from 'SoDebug/KernelSU'
        id: get-kernelsu
        run: |
          mkdir $KernelSU_Dir
          git clone https://github.com/SoDebug/KernelSU.git $KernelSU_Dir
          
      - name: Download Patch form 'SoDebug/KernelSU'
        id: get-patch
        run: |
          mkdir $Setup_Dir 
          git clone -b setup https://github.com/SoDebug/KernelSU.git $Setup_Dir
          
      - name: Patch Kernel
        run: |
          cp $Setup_Dir/setup.sh $KernelSU_Dir/kernel/setup.sh
          
      - name: Upload KernelSU Patch
        uses: actions/upload-artifact@v3.1.2
        with:
          name: KernelSU_Patched
          path: ${{ env.KernelSU_Dir }}
          retention-days: 5
          
  Complie_Evolution:
      needs: Patch_KernelSU
      runs-on: ubuntu-latest
      env:
        CheckOut_DIR: /home/runner/work/kernel_xiaomi_raphael-ex/kernel_xiaomi_raphael-ex
        AnyKernel: /home/runner/work/kernel_xiaomi_raphael-ex/AnyKernel
      steps:
      - name: Set current time
        id: set_time
        run: echo "{name}={date +'%Y-%m-%d_%H-%M-%S'}" >> $GITHUB_OUTPUT
            
      - name: Installing Dependencies
        run: |
          sudo apt update -y
          sudo apt-get install -y zip flex bison libncurses-dev gawk  libiberty-dev autoconf kmod bc build-essential gcc libc6 curl libstdc++6 git wget libssl-dev cpio p7zip-full ccache
          sudo apt clean
          
      - name: Cloning Sources and Toolchain
        run: |
          git clone https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86 --depth=1 -b master ~/clang
          git clone https://android.googlesource.com/platform/prebuilts/gcc/linux-x86/aarch64/aarch64-linux-android-4.9 -b android-10.0.0_r47 --depth=1 --single-branch --no-tags ~/aarch64-linux-android-4.9
          git clone https://android.googlesource.com/platform/prebuilts/gcc/linux-x86/arm/arm-linux-androideabi-4.9 -b android-10.0.0_r47 --depth=1 --single-branch --no-tags ~/arm-linux-androideabi-4.9
          git clone https://github.com/onettboots/boolx_anykernel.git ${{ env.AnyKernel }}
          
      - name: Clone Kernel Tree
        run: |
          git clone https://github.com/SoDebug/kernel_xiaomi_raphael-ex.git $CheckOut_DIR
          
      - name: Remove Old KernelSU Files
        run: |
          rm -rf drivers/staging/kernelsu && rm -rf .git/module/*
          
      - name: Download KernelSU_Patched 
        uses: actions/download-artifact@v3
        with:
          name: KernelSU_Patched
          path: ${{ env.CheckOut_DIR }}/KernelSU
          
      - name: Integrate KernelSU
        run: |
          cd ${{ env.CheckOut_DIR }}
          sh KernelSU/kernel/setup.sh

      - name: Compiling Kernel
        id: compile
        run: |
          CLANG=~/clang/clang-r487747c/bin
          GCC32=~/arm-linux-androideabi-4.9/bin
          GCC64=~/aarch64-linux-android-4.9/bin
          PATH=$CLANG:$GCC64:$GCC32:$PATH
          export PATH
          export ARCH=arm64
          export CLANG_TRIPLE=aarch64-linux-gnu
          export CROSS_COMPILE=aarch64-linux-android-
          export CROSS_COMPILE_ARM32=arm-linux-androideabi-
          output_dir=out
          cd ${{ env.CheckOut_DIR }}
          make LLVM=1 LLVM_IAS=1 CC="ccache clang" raphael_defconfig
          make LLVM=1 LLVM_IAS=1 CC="ccache clang" -j$(grep -c ^processor /proc/cpuinfo)
          
      - name: Packaging the Kernel
        id: package
        run: |
          cp -v ${{ env.CheckOut_DIR }}/out/arch/arm64/boot/Image.gz-dtb ${{ env.AnyKernel }} &&
          cp -v ${{ env.CheckOut_DIR }}/out/arch/arm64/boot/dtbo.img ${{ env.AnyKernel }}/o &&
          cd ${{ env.AnyKernel }} &&
          7z a -mx9 "Raphael-Kernel_KSU_Dev_Evolution_13_${{ steps.set_time.outputs.time }}.zip" *
          
      - name: Upload output_files directory
        uses: actions/upload-artifact@main
        with:
          name: Raphael-Kernel_KSU_Dev_Evolution_13_${{ steps.set_time.outputs.time }}
          path: ${{ env.AnyKernel }}/Raphael-Kernel_KSU_Dev_Evolution_13_${{ steps.set_time.outputs.time }}.zip
          
  Complie_SOVIET-ANDROID:
      needs: Patch_KernelSU
      runs-on: ubuntu-latest
      env:
        CheckOut_DIR: /home/runner/work/kernel_xiaomi_raphael/kernel_xiaomi_raphael
        AnyKernel: /home/runner/work/kernel_xiaomi_raphael/AnyKernel
      steps:
      - name: Set current time
        id: set_time
        run: echo "{name}={date +'%Y-%m-%d_%H-%M-%S'}" >> $GITHUB_OUTPUT
            
      - name: Installing Dependencies
        run: |
          sudo apt update -y
          sudo apt-get install -y zip flex bison libncurses-dev gawk  libiberty-dev autoconf kmod bc build-essential gcc libc6 curl libstdc++6 git wget libssl-dev cpio p7zip-full ccache
          sudo apt clean
          
      - name: Cloning Sources and Toolchain
        run: |
          git clone https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86 --depth=1 -b master ~/clang
          git clone https://android.googlesource.com/platform/prebuilts/gcc/linux-x86/aarch64/aarch64-linux-android-4.9 -b android-10.0.0_r47 --depth=1 --single-branch --no-tags ~/aarch64-linux-android-4.9
          git clone https://android.googlesource.com/platform/prebuilts/gcc/linux-x86/arm/arm-linux-androideabi-4.9 -b android-10.0.0_r47 --depth=1 --single-branch --no-tags ~/arm-linux-androideabi-4.9
          git clone https://github.com/onettboots/boolx_anykernel.git ${{ env.AnyKernel }}
          
      - name: Clone Kernel Tree
        run: |
          git clone -b 13.0_0516 https://github.com/SoDebug/kernel_xiaomi_raphael.git $CheckOut_DIR
          
      - name: Remove Old KernelSU Files
        run: |
          rm -rf drivers/staging/kernelsu && rm -rf .git/module/*
          
      - name: Download KernelSU_Patched 
        uses: actions/download-artifact@v3
        with:
          name: KernelSU_Patched
          path: ${{ env.CheckOut_DIR }}/KernelSU
          
      - name: Integrate KernelSU
        run: |
          cd ${{ env.CheckOut_DIR }}
          sh KernelSU/kernel/setup.sh

      - name: Compiling Kernel
        id: compile
        run: |
          CLANG=~/clang/clang-r487747c/bin
          GCC32=~/arm-linux-androideabi-4.9/bin
          GCC64=~/aarch64-linux-android-4.9/bin
          PATH=$CLANG:$GCC64:$GCC32:$PATH
          export PATH
          export ARCH=arm64
          export CLANG_TRIPLE=aarch64-linux-gnu
          export CROSS_COMPILE=aarch64-linux-android-
          export CROSS_COMPILE_ARM32=arm-linux-androideabi-
          output_dir=out
          cd ${{ env.CheckOut_DIR }}
          make LLVM=1 LLVM_IAS=1 CC="ccache clang" raphael_defconfig
          make LLVM=1 LLVM_IAS=1 CC="ccache clang" -j$(grep -c ^processor /proc/cpuinfo)
          
      - name: Packaging the Kernel
        id: package
        run: |
          cp -v ${{ env.CheckOut_DIR }}/out/arch/arm64/boot/Image.gz-dtb ${{ env.AnyKernel }} &&
          cp -v ${{ env.CheckOut_DIR }}/out/arch/arm64/boot/dtbo.img ${{ env.AnyKernel }}/o &&
          cd ${{ env.AnyKernel }} &&
          7z a -mx9 "Raphael-Kernel_KSU_Dev_SOVIET-ANDROID_13_${{ steps.set_time.outputs.time }}.zip" *
          
      - name: Upload output_files directory
        uses: actions/upload-artifact@main
        with:
          name: Raphael-Kernel_KSU_Dev_SOVIET-ANDROID_13_${{ steps.set_time.outputs.time }}
          path: ${{ env.AnyKernel }}/Raphael-Kernel_KSU_Dev_SOVIET-ANDROID_13_${{ steps.set_time.outputs.time }}.zip
          
  Release:
      needs: [Complie_Evolution, Complie_SOVIET-ANDROID]
      runs-on: ubuntu-latest
      env:
        Release_DIR: /home/runner/work/release
      steps:
      - name: Set current time
        id: set_time
        run: echo "{name}={date +'%Y-%m-%d_%H-%M-%S'}" >> $GITHUB_OUTPUT
            
      - name: Generate release tag
        id: tag
        run: |
          echo "release_tag=$(date +"%Y%m%d")" >> $GITHUB_OUTPUT
          touch release.txt
          echo "SoDebug Kernel Config：" >> release.txt
          echo "Device Code:raphael" >> release.txt
          echo "Device Name：Redmi K20 Pro | Mi 9T Pro" >> release.txt
          echo "Support Android：13.0" >> release.txt   
          echo "status=success" >> $GITHUB_OUTPUT
      
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v3
        with:
          path: ${{ env.Release_DIR }}
          
      - name: GZIP KernelSU Patched
        run: |
          cd ${{ env.Release_DIR }}
          tar -zcf KernelSU_Patched.tar.gz KernelSU_Patched
          ls
          
      - name: List Files
        run: |
          ls -al "${{ env.Release_DIR }}"

      - name: Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag.outputs.release_tag }}
          name: ${{ env.DATE }} Kernel for Raphael
          body_path: release.txt
          files: ${{ env.Release_DIR }}/*
